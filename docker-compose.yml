version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: artyfy-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: artyfy
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for Celery broker/backend
  redis:
    image: redis:7-alpine
    container_name: artyfy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Web application
  web:
    build: .
    container_name: artyfy-web
    command: >
      sh -c "python setup.py &&
             python app.py"
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/artyfy
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLASK_ENV=development
      - FLASK_DEBUG=1

  # Celery worker
  celery_worker:
    build: .
    container_name: artyfy-celery
    command: celery -A tasks.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/artyfy
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

volumes:
  postgres_data:
  redis_data:
